# 规范：等号两边不能有空格，行首行尾不留空格，只支持#开头的注释，字符串须用双引号

# 运行环境配置文件(对应于spring.profile): 一般和服务器环境一致：dev、test、prod。
# 如果有多个注册中心、配置服务，需要在同一个环境运行多个配置文件，
# 使用英文逗号分隔。如 "dev,eureka_server1" "dev,eureka_server2"
run_env_profiles=("dev,eureka_server1" "dev,eureka_server2")

# docker image TAG后缀(docker image TAG名称为:应用名-后缀)，一般和 run_env_profile 一致。
# 当有多个配置文件时，逗号替换为下划线。如 "dev_eureka_server1" "dev_eureka_server2"
image_tag_suffixs=("dev_eureka_server1" "dev_eureka_server2")

# 服务器环境(dev、test、prod)
server_env="dev"

# 一般以 服务器环境(dev、test、prod)+服务器序号 的方式设置服务器的 hostname，
# 并且在项目构建发布服务器增加 hosts 配置(/etc/hosts)
# 192.168.1.1  dev1
# 192.168.1.2  dev2
server_names=("dev1" "dev2")

# 主机的内网IP地址
server_ips=("192.168.1.1" "192.168.1.2")

# 服务器上应用权重(根据服务器配置设置权重)
server_weights=(1 3)

# docker image用户，使用主机app用户创建地docker image，这里可以写app，也可以写"2000"
image_user_name="app"

# docker image用户Group，2000对应主机的app group
image_user_group="2000"

# docker image label version
label_version="1.0"

# 您的docker registry，建议使用阿里云的docker私有镜像仓库。
docker_registry="registry.地区.aliyuncs.com/您的账号/docker-registry"

# 您的docker registry用户名。
docker_registry_user_name="docker-registry"

# 构建项目分支名(dev、test、master)对应服务器环境(dev、test、prod)
git_branch="dev"

# 应用对应的git仓库地址(github使用token、其他仓库可使用ssh免密)
git_remote_urls=("https://用户名:token@github.com/helper2018/helper-plugin.git" "https://用户名:token@github.com/helper2018/helper-plugin.git")

# 应用名称
app_names=("app1" "app2")

# jar名称
jar_names=("app1-1.0.0.jar" "app2-1.0.0.jar")

# 应用暴露端口，一个应用可以有多个，用空格分开
app_expose_ports=("8010 8011" "8020")

# 应用健康检查URL
app_check_urls=("http://127.0.0.1:8010/init/health-check" "http://127.0.0.1:8020/init/health-check")

# 应用对应的负载均衡名称如果一个应用有多个负载均衡，用英文逗号分隔。如："网关服务HTTPS，网关服务TCP"
elb_members_names=("网关服务HTTPS" "")

# 应用容器运行最大内存配置
app_run_configs=("4g" "2g")

# 应用CPU优先级设置
app_run_priorities=("1024" "512")

# java options配置
java_options="-Xmx4g -Xms4g -Xmn512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=2g -Xss256k -XX:SurvivorRatio=8 -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseCMSCompactAtFullCollection -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:CMSInitiatingOccupancyFraction=70"

# 容器hostname
docker_hostname="app"

# 项目root目录
project_root_dir="/data/project"

# jar发布目录
jar_deploy_dir="/data/project/jar"

# jar构建路径
jar_build_dir="/data/project/bin"

# 代码根目录
code_root_dir="/data/project/code"

# 服务器(server_names)、docker镜像Tag决定组合确定应用发布(如果项目之间有依赖，注意发布顺序)
# serverName|dockerImageTag
deploy_list=("dev1,app1-dev_eureka_server1" "dev2,app1-dev_eureka_server2" "dev1,app2-dev_eureka_server1" "dev2,app2-dev_eureka_server2")

# 配置结束